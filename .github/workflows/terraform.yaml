name: 'Terraform Plan and Apply'

on:
    pull_request:
      branches:
        - main
      paths:
        - terraform/*
        - .github/workflows/terraform.yaml
    push:
      branches:
        - main
      paths:
        - terraform/*
        - .github/workflows/terraform.yaml
    workflow_dispatch:


jobs:
    terraform:
      runs-on: self-hosted
      environment: dev
      permissions:
        id-token: write  # Required for OIDC authentication
        contents: read
  
      env:
        ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
        ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
        ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        TF_WORKING_DIR: './terraform/deployment'
  
      steps:
        - name: Checkout code
          uses: actions/checkout@v4
  
        - name: Set up Terraform
          uses: hashicorp/setup-terraform@v3.1.2
          with:
            terraform_version: 1.9.8
  
        - name: Authenticate with Azure using OIDC
          uses: azure/login@v2
          with:
            client-id: ${{ env.ARM_CLIENT_ID }}
            tenant-id: ${{ env.ARM_TENANT_ID }}
            subscription-id: ${{ env.ARM_SUBSCRIPTION_ID }}
  
        - name: Terraform Init
          run: |
            terraform init \
              -backend-config="resource_group_name=${{ secrets.AZURE_BACKEND_RG_NAME }}" \
              -backend-config="storage_account_name=${{ secrets.AZURE_STORAGE_ACCOUNT_NAME }}" \
              -backend-config="container_name=${{ secrets.AZURE_CONTAINER_NAME }}" \
              -backend-config="key=${{ secrets.AZURE_BACKEND_KEY }}"
          working-directory: ${{ env.TF_WORKING_DIR }}  # Use the Terraform working directory
          env:
            ARM_USE_OIDC: true
            ARM_CLIENT_ID: ${{ env.ARM_CLIENT_ID }}
            ARM_SUBSCRIPTION_ID: ${{ env.ARM_SUBSCRIPTION_ID }}
            ARM_TENANT_ID: ${{ env.ARM_TENANT_ID }}
  
        - name: Terraform Plan
          run: |
            terraform plan -out=tfplan \
              -var="remote_state_rg_name=${{ secrets.REMOTE_STATE_RG_NAME }}" \
              -var="remote_state_storage_account=${{ secrets.REMOTE_STATE_STORAGE_ACCOUNT }}" \
              -var="remote_state_container=${{ secrets.REMOTE_STATE_CONTAINER }}" \
              -var="remote_state_key=${{ secrets.REMOTE_STATE_KEY }}"
          working-directory: ${{ env.TF_WORKING_DIR }}  # Use the Terraform working directory
          env:
            ARM_USE_OIDC: true
            ARM_CLIENT_ID: ${{ env.ARM_CLIENT_ID }}
            ARM_SUBSCRIPTION_ID: ${{ env.ARM_SUBSCRIPTION_ID }}
            ARM_TENANT_ID: ${{ env.ARM_TENANT_ID }}

        # Manual Approval Step
        - name: Wait for Manual Approval
          uses: hmarr/auto-approve-action@v4
          with:
            review-message: "Please approve to continue to Terraform Apply."

        - name: Terraform Apply
          if: github.ref == 'refs/heads/main'
          run: terraform apply -auto-approve tfplan
          working-directory: ${{ env.TF_WORKING_DIR }}  # Use the Terraform working directory
          env:
            ARM_USE_OIDC: true
            ARM_CLIENT_ID: ${{ env.ARM_CLIENT_ID }}
            ARM_SUBSCRIPTION_ID: ${{ env.ARM_SUBSCRIPTION_ID }}
            ARM_TENANT_ID: ${{ env.ARM_TENANT_ID }}